name: Test

on:
  pull_request:
    branches: [develop, trunk]

jobs:
  changed:
    outputs:
      php: ${{ steps.php.outputs.any_changed }}
      js: ${{ steps.js.outputs.any_changed }}
      plugin: ${{ steps.plugin.outputs.any_changed }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: tj-actions/changed-files@v35
      id: php
      with:
        files: |
          which-blocks.php
          src/**/*.php
          phpcs.xml.dist
    - uses: tj-actions/changed-files@v35
      id: js
      with:
        files: |
          tests/**/*.js
          .eslintrc.js
    - uses: tj-actions/changed-files@v35
      id: plugin
      with:
        files: |
          which-blocks.php
          src/**/*.php
          tests/**/*
          package.json
          package-lock.json
          composer.json
          composer.lock
          .wp-env.json
    - run: |
        echo ${{ steps.php.outputs.any_changed }} ${{ steps.js.outputs.any_changed }} ${{ steps.plugin.outputs.any_changed }}

  cache:
    name: Cache the Node
    needs: changed
    if: ${{ needs.changed.plugin == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'
    - name: Get npm cache directory
      id: npm-cache-dir
      shell: bash
      run: echo "node-cache-dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
    - uses: actions/cache@v3
      id: npm-cache
      with:
        path: |
          ./node_modules
          /home/runner/.cache/Cypress
          ${{ steps.npm-cache-dir.outputs.node-cache-dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install dependencies
      run: npm ci

  phpcs:
    name: Lint PHP
    needs: changed
    if: ${{ needs.changed.php == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        coverage: none
        tools: composer:v2
    - name: Install dependencies
      run: composer install
    - name: Lint PHP
      run: composer run lint .

  jslint:
    name: Lint JS
    needs: [cache, changed]
    if: ${{ needs.changed.js == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'
    - name: Get npm cache directory
      id: npm-cache-dir
      shell: bash
      run: echo "node-cache-dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
    - uses: actions/cache@v3
      id: npm-cache
      with:
        path: |
          ./node_modules
          /home/runner/.cache/Cypress
          ${{ steps.npm-cache-dir.outputs.node-cache-dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Lint JS
      run: npm run lint:js

  cypress:
    name: E2E ${{ matrix.core.name }}
    needs: [changed, jslint, phpcs, cache]
    if: ${{ needs.changed.plugin == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        core:
          - {name: 'WP latest', version: 'latest'}
          - {name: 'WP 5.7', version: 'WordPress/WordPress#5.7'}
          - {name: 'WP trunk', version: 'WordPress/WordPress#master'}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'
    - name: Get npm cache directory
      id: npm-cache-dir
      shell: bash
      run: echo "node-cache-dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
    - uses: actions/cache@v3
      id: npm-cache
      with:
        path: |
          ./node_modules
          /home/runner/.cache/Cypress
          ${{ steps.npm-cache-dir.outputs.node-cache-dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Build (optional)
      run: npm run build
    - name: Set the core version
      run: ./tests/bin/set-core-version.js ${{ matrix.core.version }}
    - name: Set up WP environment
      run: npm run env:start
    - name: Test
      run: npm run cypress:run
